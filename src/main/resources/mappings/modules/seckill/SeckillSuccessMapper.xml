<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qzw.modules.dao.apartment.seckill.SeckillSuccessDao" >
  <resultMap id="BaseResultMap" type="com.qzw.modules.model.apartment.seckill.SeckillSuccess" >
    <id column="apartment_id" property="apartmentId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    apartment_id, user_id, state, create_time
  </sql>

  <select id="queryByIdWithSeckill" resultType="SeckillSuccess">
    SELECT
    ss.apartment_id,
    ss.user_id,
    ss.create_time,
    ss.state,
    s.apartment_id "seckill.seckll_id",
    s.start_time "seckill.star_time",
    s.end_time "seckill.end_time"
    FROM seckill_success ss
    INNER JOIN apartment_seckill s ON ss.apartment_id = s.apartment_id
    WHERE ss.apartment_id = #{apartmentId} and ss.user_id = #{userId}
  </select>




  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from seckill_result
    where apartment_id = #{apartmentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from seckill_result
    where apartment_id = #{apartmentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qzw.modules.model.apartment.seckill.SeckillSuccess" >
    insert into seckill_result (apartment_id, user_id, state, 
      create_time)
    values (#{apartmentId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{state,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.qzw.modules.model.apartment.seckill.SeckillSuccess" >
    insert into seckill_result
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="apartmentId != null" >
        apartment_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="apartmentId != null" >
        #{apartmentId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qzw.modules.model.apartment.seckill.SeckillSuccess" >
    update seckill_result
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where apartment_id = #{apartmentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qzw.modules.model.apartment.seckill.SeckillSuccess" >
    update seckill_result
    set user_id = #{userId,jdbcType=INTEGER},
      state = #{state,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where apartment_id = #{apartmentId,jdbcType=INTEGER}
  </update>
</mapper>