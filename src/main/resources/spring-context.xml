<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd"
       default-lazy-init="true">

    <description>Spring Configuration</description>

    <!-- 加载配置属性文件 -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath:properties/*.properties" />

    <!-- 加载应用属性实例，可通过 @Value("#{APP_PROP['jdbc.driver']}") String jdbcDriver 方式引用 -->
    <util:properties id="APP_PROP" location="classpath:properties/config.properties" local-override="true" />

    <!-- 使用Annotation自动注册Bean，解决事物失效问题：在主容器中不扫描@Controller注解，在SpringMvc中只扫描@Controller注解。 -->
    <!--<context:component-scan base-package="milliongravity.modules">-->
        <!--&lt;!&ndash; base-package 如果多个，用“,”分隔 &ndash;&gt;-->
        <!--<context:exclude-filter type="annotation"   expression="org.springframework.stereotype.Controller" />-->
    <!--</context:component-scan>-->
    <context:component-scan base-package="com.qzw.modules,com.qzw.common"/>

    <!-- MyBatis begin -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage" value="com.qzw.modules" />
        <!--<property name="typeAliasesSuperType" value="milliongravity.common.persistence.BaseEntity" />-->
        <property name="mapperLocations" value="classpath*:/mappings/*/**/*.xml" />
        <property name="configLocation" value="classpath:/mybatis-config.xml"/>
    </bean>
    <!-- dbcp pool config -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName"  value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- 扫描basePackage下所有以@MyBatisDao注解的接口 -->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.qzw.modules.dao" />
        <property name="annotationClass" value="com.qzw.common.persistence.annotation.MyBatisDao" />
    </bean>

    <!-- 定义事务 -->
    <bean id="transactionManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 配置 Annotation 驱动，扫描@Transactional注解的类定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="false" />
    <bean class = "com.qzw.common.utils.SpringContextHolder" lazy-init="false"/>

    <bean id="redisDao" class="com.qzw.modules.dao.cache.seckill.SeckillCacheDao">
        <constructor-arg index="0" value="127.0.0.1"/>
        <constructor-arg index="1" value="6379" />
    </bean>
    <!-- MyBatis end -->
    <!--&lt;!&ndash; 配置 JSR303 Bean Validator 定义 &ndash;&gt;
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
    &lt;!&ndash; 计划任务配置，用 @Service @Lazy(false)标注类，用@Scheduled(cron = "0 0 2 * * ?")标注方法 &ndash;&gt;
    <bean  class = "milliongravity.common.utils.SpringContextHolder" lazy-init="false"/>
-->
    <!-- quartz持久化存储 -->
    <!--<bean id="scheduler"-->
          <!--class="org.springframework.scheduling.quartz.SchedulerFactoryBean">-->
        <!--<property name="dataSource">-->
            <!--<ref bean="dataSource" />-->
        <!--</property>-->
        <!--<property name="exposeSchedulerInRepository" value="true" />-->
        <!--&lt;!&ndash;-->
        <!--<property name="jobFactory">-->
            <!--<bean class="com.esoft.core.quartz.AutowiringSpringBeanJobFactory " />-->
         <!--&ndash;&gt;-->
        <!--&lt;!&ndash; <bean class="org.springframework.scheduling.quartz.SpringBeanJobFactory"-->
            <!--/> &ndash;&gt;-->
        <!--&lt;!&ndash;-->
        <!--</property>-->

        <!--<property name="schedulerName" value="Mscheduler" />-->
        <!--&ndash;&gt;-->
        <!--<property name="configLocation" value="classpath:properties/quartz.properties" />-->
        <!--<property name="applicationContextSchedulerContextKey" value="applicationContextKey" />-->
        <!--<property name="autoStartup" value="true" />-->
    <!--</bean>-->
</beans>